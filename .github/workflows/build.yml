name: Build/Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        
      - name: Install system dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-0 libgtk-3-0 libnss3 libx11-xcb1 libxcb1 libxcb-dri3-0 libgtk-3-dev libxss1 libasound2t64 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libcups2 libdrm2 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libasound2-dev

      - name: Install ImageMagick
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y imagemagick
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install imagemagick
          else
            choco install imagemagick.app
          fi
        shell: bash

      - name: Generate Icons
        run: cd build && ./generate-icons.sh
        shell: bash

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}